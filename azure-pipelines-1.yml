# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build stage
  jobs:
    - job: Build
      pool:
        vmImage: ubuntu-latest

      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '16.x'
        displayName: 'Install Node.js'

      - script: |
          npm install -g @angular/cli
          npm install --legacy-peer-deps
          ng build --configuration production
        displayName: 'npm install and build'
        workingDirectory: '$(Build.SourcesDirectory)'
        
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/route'
          Contents: '**'
          TargetFolder: '$(System.DefaultWorkingDirectory)/dist/local-goods'
      
          
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/local-goods'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true
        
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          ArtifactName: 'drop'
          publishLocation: 'Container'

- stage: Deployment
  displayName: 'Deploy to Production'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deployment
    pool:
      vmImage: 'ubuntu-latest'
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy App Service'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'egaripovoutlook-sc'
              appType: 'webApp'
              WebAppName: 'localgoodsfr'
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'

